DAY 3 INSTALLATION COMMANDS


[19-03-2025 10:53] +91 90928 13114: sudo apt install fontconfig openjdk-17-jre
java -version
[19-03-2025 11:04] +91 90928 13114: enkins.io/doc/book/installing/linux/#debianubuntu
[19-03-2025 11:05] +91 90928 13114: https://www.jenkins.io/doc/book/installing/linux/#debianubuntu
[19-03-2025 11:18] +91 90928 13114: sudo service Jenkins restart
[19-03-2025 11:19] +91 90928 13114: sudo service Jenkins status
[19-03-2025 11:25] +91 90928 13114: docker 
_______

# sudo apt install docker.io -y 
# sudo service docker restart 
# sudo service docker status

# sudo usermod -aG docker $USER

docker images 
docker ps 

# sudo chmod 666 /var/run/docker.sock
[19-03-2025 11:30] +91 90928 13114: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
[19-03-2025 11:31] +91 90928 13114: curl -LO https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl
[19-03-2025 11:32] +91 90928 13114: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
[19-03-2025 11:33] +91 90928 13114: chmod +x kubectl
mkdir -p ~/.local/bin
mv ./kubectl ~/.local/bin/kubectl
[19-03-2025 11:34] +91 90928 13114: kubectl version --client
[19-03-2025 11:34] +91 90928 13114: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/

https://dl.k8s.io/release/v1.32.0/bin/linux/amd64/kubectl

sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl


chmod +x kubectl
mkdir -p ~/.local/bin
mv ./kubectl ~/.local/bin/kubectl

kubectl version --client
[19-03-2025 11:39] +91 90928 13114: https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download
[19-03-2025 11:40] +91 90928 13114: curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
[19-03-2025 11:43] +91 90928 13114: minikube start
[19-03-2025 12:02] +91 90928 13114: minikube start 
minikube status 

kubectl get pod 

kubeclt get deploy 
kubectl get replica
kubectl get pod -o wide
[19-03-2025 12:03] +91 90928 13114: version: '3'

services:
  web:
    image: nginx:latest
    ports:
      - 80:80

  db:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=secret
[19-03-2025 12:08] +91 90928 13114: docker exec -it david-db-1 /bin/bash
[19-03-2025 12:12] +91 90928 13114: mysql -u root -p
[19-03-2025 12:15] Ragulandiran: sudo apt install docker-compose -y
[19-03-2025 12:19] +91 90928 13114: download docker compose



sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DOCKER COMPOSE
Docker Compose is a tool that allows you to define and manage multi-container Docker applications. It simplifies the process of running multiple containers, their configurations, and their interdependencies. Compose uses a YAML file to define the services, networks, and volumes required for your application.
	Docker Compose is a tool which is used to manage multi container-based applications.
	Using Docker Compose we can easily setup & deploy multi container-based applications.
	We will give containers information to Docker Compose using YML file  (docker-compose.yml)
	Docker Compose YML should have all the information related to containers creation.
	Docker Compose YML File Looks Like: